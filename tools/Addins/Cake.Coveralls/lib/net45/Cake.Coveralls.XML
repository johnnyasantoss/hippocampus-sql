<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.Coveralls</name>
    </assembly>
    <members>
        <member name="T:Cake.Coveralls.CoverallsAliases">
            <summary>
            <para>Contains aliases related to <see href="https://coveralls.io/">Coveralls.io</see>.</para>
            <para>
            In order to use the commands for this addin, you will need to include either of the following in your build.cake file to download and
            reference from NuGet.org:
            <code>
            #tool coveralls.net
            </code>
            <code>
            #tool coveralls.io
            </code>
            In addition, you will need to include the following:
            <code>
            #addin Cake.Coveralls
            </code>
            </para>
            </summary>
        </member>
        <member name="M:Cake.Coveralls.CoverallsAliases.CoverallsIo(Cake.Core.ICakeContext,Cake.Core.IO.FilePath)">
            <summary>
            Uploads the code coverage report to Coveralls.io using the coveralls.io tool.
            </summary>
            <param name="context">The context.</param>
            <param name="codeCoverageReportFilePath">The path to the code coverage file.</param>
            <example>
            <code>
            CoverallsIo("coverage.xml");
            </code>
            </example>
        </member>
        <member name="M:Cake.Coveralls.CoverallsAliases.CoverallsIo(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.Coveralls.CoverallsIoSettings)">
            <summary>
            Uploads the code coverage report to Coveralls.io using the coveralls.io tool with the specified settings
            </summary>
            <param name="context">The context.</param>
            <param name="codeCoverageReportFilePath">The path to the code coverage file.</param>
            <param name="settings">The settings.</param>
            <example>
            <code>
            CoverallsIo("coverage.xml", new CoverallsIoSettings()
            {
                RepoToken = "abcdef"
            });
            </code>
            </example>
        </member>
        <member name="M:Cake.Coveralls.CoverallsAliases.CoverallsNet(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.Coveralls.CoverallsNetReportType)">
            <summary>
            Uploads the code coverage report to Coveralls.io using the coveralls.net tool.
            </summary>
            <param name="context">The context.</param>
            <param name="codeCoverageReportFilePath">The path to the code coverage file.</param>
            <param name="reportType">The type of the code coverage report.</param>
            <example>
            <code>
            CoverallsNet("coverage.xml", CoverallsNetReportType.OpenCover);
            </code>
            </example>
        </member>
        <member name="M:Cake.Coveralls.CoverallsAliases.CoverallsNet(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.Coveralls.CoverallsNetReportType,Cake.Coveralls.CoverallsNetSettings)">
            <summary>
            Uploads the code coverage report to Coveralls.io using the coveralls.net tool with the specified settings.
            </summary>
            <param name="context">The context.</param>
            <param name="codeCoverageReportFilePath">The path to the code coverage file.</param>
            <param name="reportType">The type of the code coverage report.</param>
            <param name="settings">The settings.</param>
            <example>
            <code>
            CoverallsNet("coverage.xml", CoverallsNetReportType.OpenCover, new CoverallsNetSettings()
            {
                RepoToken = "abcdef"
            });
            </code>
            </example>
        </member>
        <member name="T:Cake.Coveralls.CoverallsIoRunner">
            <summary>
            The Coveralls.io runner.
            </summary>
        </member>
        <member name="M:Cake.Coveralls.CoverallsIoRunner.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Coveralls.CoverallsIoRunner" /> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="toolLocator">The tool locator</param>
        </member>
        <member name="M:Cake.Coveralls.CoverallsIoRunner.Run(Cake.Core.IO.FilePath,Cake.Coveralls.CoverallsIoSettings)">
            <summary>
            Publish the code coverage report to Coveralls.io using the specified settings.
            </summary>
            <param name="codeCoverageReportFilePath">The code coverage report file path.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Cake.Coveralls.CoverallsIoRunner.GetToolName">
            <summary>
            Gets the name of the tool.
            </summary>
            <returns>The name of the tool.</returns>
        </member>
        <member name="M:Cake.Coveralls.CoverallsIoRunner.GetToolExecutableNames">
            <summary>
            Gets the name of the tool executable.
            </summary>
            <returns>The tool executable name.</returns>
        </member>
        <member name="T:Cake.Coveralls.CoverallsIoSettings">
            <summary>
            Contains settings used by <see cref="T:Cake.Coveralls.CoverallsIoRunner"/>.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsIoSettings.Debug">
            <summary>
            Gets or sets a value indicating whether to turn on debugging.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsIoSettings.FullSources">
            <summary>
            Gets or sets a value indicating whether to send full sources instead of the digest
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsIoSettings.RepoToken">
            <summary>
            Gets or sets the Repo Token to use when publishing to Coveralls.io
            </summary>
        </member>
        <member name="T:Cake.Coveralls.CoverallsNetReportType">
            <summary>
            The coverage report type for CoverallNetRunner
            </summary>
        </member>
        <member name="F:Cake.Coveralls.CoverallsNetReportType.OpenCover">
            <summary>
            Reads input as OpenCover data
            </summary>
        </member>
        <member name="F:Cake.Coveralls.CoverallsNetReportType.DynamicCodeCoverage">
            <summary>
            Reads input as the CodeCoverage.exe xml format
            </summary>
        </member>
        <member name="F:Cake.Coveralls.CoverallsNetReportType.Monocov">
            <summary>
            Reads input as monocov results folder
            </summary>
        </member>
        <member name="T:Cake.Coveralls.CoverallsNetRunner">
            <summary>
            The Coveralls.io runner.
            </summary>
        </member>
        <member name="M:Cake.Coveralls.CoverallsNetRunner.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Coveralls.CoverallsNetRunner" /> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="toolLocator">The tool locator</param>
        </member>
        <member name="M:Cake.Coveralls.CoverallsNetRunner.Run(Cake.Core.IO.FilePath,Cake.Coveralls.CoverallsNetReportType,Cake.Coveralls.CoverallsNetSettings)">
            <summary>
            Publish the code coverage report to Coveralls.io using the specified settings.
            </summary>
            <param name="codeCoverageReportFilePath">The code coverage report file path.</param>
            <param name="reportType">The Code Coverage Report Type</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Cake.Coveralls.CoverallsNetRunner.GetToolName">
            <summary>
            Gets the name of the tool.
            </summary>
            <returns>The name of the tool.</returns>
        </member>
        <member name="M:Cake.Coveralls.CoverallsNetRunner.GetToolExecutableNames">
            <summary>
            Gets the name of the tool executable.
            </summary>
            <returns>The tool executable name.</returns>
        </member>
        <member name="T:Cake.Coveralls.CoverallsNetSettings">
            <summary>
            Contains settings used by <see cref="T:Cake.Coveralls.CoverallsNetRunner"/>.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.OutputFilePath">
            <summary>
            Gets or sets the Output File path.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.UseRelativePaths">
            <summary>
            Gets or sets a value indicating whether to attempt to strip the current working directory from the beginning of the source file path.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.BaseFilePath">
            <summary>
            Gets or sets the Base File path, which when UseRelativePaths is set, this path is used instead of the current working directory.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.RepoToken">
            <summary>
            Gets or sets the Repo Token to use when publishing to Coveralls.io
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.RepoTokenVariable">
            <summary>
            Gets or sets the Repo Token Variable which is the Environment Variable name where the coverall.io token is available.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.CommitId">
            <summary>
            Gets or sets the git commit hash for coverage report.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.CommitBranch">
            <summary>
            Gets or sets the git commit branch for coverage report.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.CommitAuthor">
            <summary>
            Gets or sets the git commit author for coverage report.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.CommitEmail">
            <summary>
            Gets or sets the git commit email for coverage report.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.CommitMessage">
            <summary>
            Gets or sets the git commit message for coverage report.
            </summary>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.JobId">
            <summary>
            Gets or sets the Job Id to provide to coveralls.io.
            </summary>
            <remarks>Default is 0.</remarks>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.ServiceName">
            <summary>
            Gets or sets the service name for the coverage report.
            </summary>
            <remarks>Default is coveralls.net</remarks>
        </member>
        <member name="P:Cake.Coveralls.CoverallsNetSettings.TreatUploadErrorsAsWarnings">
            <summary>
            Gets or sets a value indicating whether to exit successfully if an upload error is encountered.
            </summary>
        </member>
    </members>
</doc>
